import { TreeNode } from '../Tree';

// Common data transform configurations shared between inline and fetch connectors
const dataTransformChildren: TreeNode[] = [
  {
    id: 'mark.data.transform.sortBy',
    label: 'sortBy',
    type: 'SortByTransform',
    description: '排序变换',
    optional: true,
  },
  {
    id: 'mark.data.transform.sort',
    label: 'sort',
    type: 'SortTransform',
    description: '排序变换',
    optional: true,
  },
  {
    id: 'mark.data.transform.pick',
    label: 'pick',
    type: 'PickTransform',
    description: '字段选择变换',
    optional: true,
  },
  {
    id: 'mark.data.transform.rename',
    label: 'rename',
    type: 'RenameTransform',
    description: '字段重命名变换',
    optional: true,
  },
  {
    id: 'mark.data.transform.fold',
    label: 'fold',
    type: 'FoldTransform',
    description: '折叠变换',
    optional: true,
  },
  {
    id: 'mark.data.transform.join',
    label: 'join',
    type: 'JoinTransform',
    description: '连接变换',
    optional: true,
  },
  {
    id: 'mark.data.transform.filter',
    label: 'filter',
    type: 'FilterDataTransform',
    description: '过滤变换',
    optional: true,
  },
  {
    id: 'mark.data.transform.map',
    label: 'map',
    type: 'MapTransform',
    description: '映射变换',
    optional: true,
  },
  {
    id: 'mark.data.transform.slice',
    label: 'slice',
    type: 'SliceTransform',
    description: '切片变换',
    optional: true,
  },
  {
    id: 'mark.data.transform.kde',
    label: 'kde',
    type: 'KDEDataTransform',
    description: 'KDE变换',
    optional: true,
  },
  {
    id: 'mark.data.transform.venn',
    label: 'venn',
    type: 'VennDataTransform',
    description: '维恩图变换',
    optional: true,
  },
  {
    id: 'mark.data.transform.log',
    label: 'log',
    type: 'LogDataTransform',
    description: '对数变换',
    optional: true,
  },
  {
    id: 'mark.data.transform.custom',
    label: 'custom',
    type: 'CustomTransform',
    description: '自定义变换',
    optional: true,
  },
  {
    id: 'mark.data.transform.ema',
    label: 'ema',
    type: 'EMADataTransform',
    description: 'EMA变换',
    optional: true,
  },
];

export const dataConfig: TreeNode[] = [
  // 数据配置
  {
    id: 'mark.data',
    label: 'data',
    type: 'Data',
    description: '数据|数据源',
    optional: true,
    important: true,
    children: [
      {
        id: 'mark.data.inline',
        label: 'InlineConnector',
        type: 'Object',
        description: '内联数据',
        children: [
          {
            id: 'mark.data.inline.type',
            label: 'type',
            type: "'inline'",
            description: '数据类型',
            optional: true,
          },
          {
            id: 'mark.data.inline.value',
            label: 'value',
            type: 'any',
            description: '数据值',
            optional: true,
          },
          {
            id: 'mark.data.inline.transform',
            label: 'transform',
            type: 'DataTransform[]',
            description: '数据变换',
            optional: true,
            children: dataTransformChildren,
          },
        ],
      },
      {
        id: 'mark.data.fetch',
        label: 'FetchConnector',
        type: 'Object',
        description: '远程数据',
        children: [
          {
            id: 'mark.data.fetch.type',
            label: 'type',
            type: "'fetch'",
            description: '数据类型',
            optional: true,
          },
          {
            id: 'mark.data.fetch.value',
            label: 'value',
            type: 'string',
            description: '数据URL',
            optional: true,
          },
          {
            id: 'mark.data.fetch.format',
            label: 'format',
            type: "'json' | 'csv'",
            description: '数据格式',
            optional: true,
          },
          {
            id: 'mark.data.fetch.delimiter',
            label: 'delimiter',
            type: 'string',
            description: 'CSV分隔符',
            optional: true,
          },
          {
            id: 'mark.data.fetch.autoType',
            label: 'autoType',
            type: 'boolean',
            description: '自动类型推断',
            optional: true,
          },
          {
            id: 'mark.data.fetch.transform',
            label: 'transform',
            type: 'DataTransform[]',
            description: '数据变换',
            optional: true,
            children: dataTransformChildren,
          },
        ],
      },
    ],
  },
];
